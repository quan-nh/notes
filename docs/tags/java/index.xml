<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on q-notes</title>
    <link>https://quan-nh.github.io/notes/tags/java/</link>
    <description>Recent content in java on q-notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Jun 2020 10:25:15 +0700</lastBuildDate><atom:link href="https://quan-nh.github.io/notes/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install Java</title>
      <link>https://quan-nh.github.io/notes/2020/06/install-java/</link>
      <pubDate>Tue, 09 Jun 2020 10:25:15 +0700</pubDate>
      
      <guid>https://quan-nh.github.io/notes/2020/06/install-java/</guid>
      <description> download openjdk &amp;amp; unzip to /Library/Java/JavaVirtualMachines/ dir  alias j8=&amp;#34;export JAVA_HOME=`/usr/libexec/java_home -v 1.8`; java -version&amp;#34; alias j13=&amp;#34;export JAVA_HOME=`/usr/libexec/java_home -v 13`; java -version&amp;#34; </description>
    </item>
    
    <item>
      <title>parse duration</title>
      <link>https://quan-nh.github.io/notes/2019/12/parse-duration/</link>
      <pubDate>Wed, 11 Dec 2019 10:25:15 +0700</pubDate>
      
      <guid>https://quan-nh.github.io/notes/2019/12/parse-duration/</guid>
      <description>java.time.Duration/parse function obtains a Duration from a text string in ISO-8601 duration format P&amp;lt;date&amp;gt;T&amp;lt;time&amp;gt;
Examples:
&amp;quot;PT20.345S&amp;quot; -- parses as &amp;quot;20.345 seconds&amp;quot; &amp;quot;PT15M&amp;quot; -- parses as &amp;quot;15 minutes&amp;quot; (where a minute is 60 seconds) &amp;quot;PT10H&amp;quot; -- parses as &amp;quot;10 hours&amp;quot; (where an hour is 3600 seconds) &amp;quot;P2D&amp;quot; -- parses as &amp;quot;2 days&amp;quot; (where a day is 24 hours or 86400 seconds) &amp;quot;P2DT3H4M&amp;quot; -- parses as &amp;quot;2 days, 3 hours and 4 minutes&amp;quot; &amp;quot;P-6H3M&amp;quot; -- parses as &amp;quot;-6 hours and +3 minutes&amp;quot; &amp;quot;-P6H3M&amp;quot; -- parses as &amp;quot;-6 hours and -3 minutes&amp;quot; &amp;quot;-P-6H+3M&amp;quot; -- parses as &amp;quot;+6 hours and -3 minutes&amp;quot;  (import java.</description>
    </item>
    
    <item>
      <title>Stack &amp; Queue</title>
      <link>https://quan-nh.github.io/notes/2018/07/stack-queue/</link>
      <pubDate>Tue, 03 Jul 2018 10:25:15 +0700</pubDate>
      
      <guid>https://quan-nh.github.io/notes/2018/07/stack-queue/</guid>
      <description>Stack  Java  Stack&amp;lt;Integer&amp;gt; st = new Stack&amp;lt;&amp;gt;(); st.push(1); // st=[1] st.push(2); // st=[1, 2] st.push(3); // st=[1, 2, 3]  // returns the element on the top of the stack, removing it from stack st.pop(); //=&amp;gt; 3, st=[1, 2]  // returns the element on the top of the stack, but does not remove it st.peek(); //=&amp;gt; 2, st=[1, 2]  Clojure Vector  (def st [1 2 3]) ; the functions operate on the right side (peek st) ;=&amp;gt; 3 (pop st) ;=&amp;gt; [1 2] (conj st 4) ;=&amp;gt; [1 2 3 4]  Clojure List  (def st &amp;#39;(1 2 3)) ; the functions operate on the left side (peek st) ;=&amp;gt; 1 (pop st) ;=&amp;gt; (2 3) (conj st 4) ;=&amp;gt; (4 1 2 3) Queue Add last, remove first impl:</description>
    </item>
    
  </channel>
</rss>
